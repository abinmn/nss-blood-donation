image: gitlab/dind:latest
services:
  - docker:dind
before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - chmod +x ./setup_env.sh
  - ./setup_env.sh
stages:
  - build
  - development
build:
  stage: build
  script:
    - docker build -t $CI_REGISTRY/$CI_PROJECT_PATH:latest . 
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:latest
  tags:
    - docker 
deploy:
  stage: development
  script:
    ###### Login to deployment server using SSH #####
    - mkdir -p ~/.ssh
    - echo "$DEVELOPMENT_SERVER_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H $DEVELOPMENT_SERVER_IP >> ~/.ssh/known_hosts  
    ###### Pull the registry to deployment server and recereate the docker service #####    

    - ssh $DEVELOPMENT_SERVER_USERNAME@$DEVELOPMENT_SERVER_IP docker system prune -f
    - ssh $DEVELOPMENT_SERVER_USERNAME@$DEVELOPMENT_SERVER_IP docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY 
    - ssh $DEVELOPMENT_SERVER_USERNAME@$DEVELOPMENT_SERVER_IP docker pull $CI_REGISTRY/$CI_PROJECT_PATH:latest
    - ssh $DEVELOPMENT_SERVER_USERNAME@$DEVELOPMENT_SERVER_IP docker container stop $(docker container ls -aq)
    - ssh $DEVELOPMENT_SERVER_USERNAME@$DEVELOPMENT_SERVER_IP docker run -d -p 8080:80 $CI_REGISTRY/$CI_PROJECT_PATH:latest

  only:
    - master
  tags:
    - docker